[{"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\index.tsx":"1","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\reportWebVitals.ts":"2","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\App.tsx":"3","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Pages\\Employees.tsx":"4","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Pages\\Home.tsx":"5","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Components\\Header\\Header.tsx":"6","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\utils\\HTTPWrapper.ts":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":630,"mtime":1606837371274,"results":"11","hashOfConfig":"9"},{"size":2478,"mtime":1606987135711,"results":"12","hashOfConfig":"9"},{"size":126,"mtime":1606837286920,"results":"13","hashOfConfig":"9"},{"size":414,"mtime":1606836887564,"results":"14","hashOfConfig":"9"},{"size":578,"mtime":1606838611259,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cdk9yv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\index.tsx",[],["33","34"],"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\reportWebVitals.ts",[],"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\App.tsx",[],"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Pages\\Employees.tsx",["35"],"import React, { useEffect, useState, useCallback } from 'react';\r\nimport HTTPWrapper from '../utils/HTTPWrapper';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport './Employees.css';\r\nimport { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\ninterface IEmployee {\r\n    last_name?: string,\r\n    first_name: string,\r\n}\r\n\r\nexport const Employees = () => {\r\n\r\n    const [employees, setEmployees] = useState<string[]>([]);\r\n    const [newName, setNewName] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        const http = new HTTPWrapper();\r\n        http.get('users?per_page=12')\r\n            .then(res => {\r\n                const result = res.data.data.map((item: IEmployee) => {\r\n                    return item.first_name;\r\n                })\r\n                setEmployees(result);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n    const deleteEmployee = useCallback((e: React.MouseEvent<HTMLElement>, name: string) => {\r\n        if (employees) {\r\n            const index = employees.indexOf(name);\r\n            const arr = employees.slice();\r\n            delete arr[index];\r\n            setEmployees(arr);\r\n        }\r\n    }, [employees]);\r\n\r\n    const addEmployee = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n        if (newName) {\r\n            const arr = employees.slice();\r\n            arr.unshift(newName);\r\n            setEmployees(arr);\r\n            setNewName('');\r\n        }\r\n    }, [newName]);\r\n\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.target.value);\r\n    }, [setNewName]);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div>\r\n                <TextField id=\"name\" type=\"text\" value={newName} onChange={handleChange} />\r\n                <Button variant=\"contained\" onClick={addEmployee}>Add</Button>\r\n            </div>\r\n\r\n            {employees ? employees.map((item: string, index: number) => {\r\n                return (\r\n                    <div className='container-employee' key={index}>\r\n                        <p>{item}</p>\r\n                        <div className='icon' onClick={(e: React.MouseEvent<HTMLElement>) => { deleteEmployee(e, item) }}>\r\n                            <DeleteOutlineIcon />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                )\r\n            }) : null}\r\n\r\n        </div>\r\n    )\r\n}","E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Pages\\Home.tsx",[],"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\Components\\Header\\Header.tsx",[],"E:\\Resliv-Test\\Resliv-Task6\\resvil-task6\\src\\utils\\HTTPWrapper.ts",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":48,"column":8,"nodeType":"44","endLine":48,"endColumn":17,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'employees'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [employees, newName]",{"range":"53","text":"54"},[1534,1543],"[employees, newName]"]